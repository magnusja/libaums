apply plugin: "com.android.library"
apply plugin: "kotlin-android"
apply plugin: "kotlin-android-extensions"
apply plugin: "org.jetbrains.dokka"
apply plugin: "com.vanniktech.android.junit.jacoco"
apply from: "../constants.gradle"

ext {
    artifact = "libaums"
    bintrayName = "libaums"
    libraryVersion = "0.8.0"
}

configurations {
    javadocDeps
}

junitJacoco {
    jacocoVersion = "0.8.6"
}

android {
    compileSdkVersion project.ext.compileSdkVersion
    buildToolsVersion project.ext.buildToolsVersion

    defaultConfig {
        minSdkVersion project.ext.minSdkVersion
        targetSdkVersion project.ext.targetSdkVersion
        versionCode project.ext.versionCodeProduction
        versionName project.ext.versionNameProduction

        externalNativeBuild {
            cmake {
                abiFilters "arm64-v8a", "armeabi-v7a", "x86", "x86_64"
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
        }

        debug {
            testCoverageEnabled true
        }
    }

    lintOptions {
        abortOnError false
    }

    // TODO remove this?
    testOptions {
        unitTests.returnDefaultValues = true
    }

    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }
    ndkVersion project.ext.ndkVersion
}

dependencies {
    testImplementation "junit:junit:$junitVersion"
    testImplementation "org.apache.commons:commons-io:$apacheCommonsIoVersion"
    testImplementation "com.eclipsesource.minimal-json:minimal-json:$eclipsesourceMinimalJsonVersion"
    testImplementation "org.xenei:junit-contracts:$xeneiJunitContractsVersion"
    testImplementation "org.mockito:mockito-core:$mockitoCoreVersion"

    api "androidx.core:core-ktx:$coreKtx"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlinVersion"
}

task bintray {
    apply from: "../install.gradle"
    apply from: "../bintray.gradle"
}
